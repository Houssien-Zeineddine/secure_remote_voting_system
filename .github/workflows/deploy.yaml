name: CI/CD Pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: secure_voting_system
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, ctype, fileinfo, openssl, pdo, mysql, tokenizer, xml, gd
          coverage: none

      - name: Install Composer dependencies
        working-directory: server
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Configure and test Laravel
        working-directory: server
        run: |
          cp .env.testing .env
          php artisan config:clear
          php artisan key:generate --env=testing
          php artisan config:cache
          php artisan migrate --env=testing
          php artisan test

  build-and-push-laravel-image:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build laravel image
        working-directory: server
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/final_project_laravel_image:latest .

      - name: Push laravel image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/final_project_laravel_image:latest

  build-and-push-react-image:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build react image
        working-directory: client
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/final_project_react_image:latest .

      - name: Push react image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/final_project_react_image:latest

  Copy-docker-compose-to-EC2:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy docker-compose to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose.yaml"
          target: "/home/${{ secrets.EC2_USER }}/"

  Deploy-Laravel-Docker:
    runs-on: ubuntu-latest
    needs:
      [
        build-and-push-laravel-image,
        build-and-push-react-image,
        Copy-docker-compose-to-EC2,
      ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker compose down

            echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/final_project_laravel_image:latest
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/final_project_react_image:latest

            sudo docker compose up -d

            sudo docker exec -u root backend bash -c "touch .env && chmod 644 .env"

            sudo docker exec -i backend bash -c "echo 'OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}' >> .env"
            sudo docker exec -i backend php artisan config:clear
            sudo docker exec -i backend php artisan config:cache
            sudo docker exec -i backend php artisan migrate --force

            sudo docker image prune -a -f

# sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/final_project_laravel_image:latest
# sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/final_project_react_image:latest
# sudo docker compose up -d
# sleep 10
# sudo docker exec -i backend bash -c "touch .env && chmod 644 .env"
# sudo docker exec -i ubuntu-backend-1 bash -c "echo 'OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}' >> .env"

# sudo docker exec -i ubuntu-backend-1 php artisan config:clear
# sudo docker exec -i ubuntu-backend-1 php artisan config:cache

# sudo docker exec -it ubuntu-backend-1 php artisan migrate --force
# sudo docker image prune -a -f

# docker-compose down
#             docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/final_project_laravel_image:latest
#             docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/final_project_react_image:latest
#             docker image prune -a -f
#             docker-compose up -d
#             sleep 10  # Wait for containers to start
#             docker exec $(docker ps -qf "name=backend") php artisan migrate
