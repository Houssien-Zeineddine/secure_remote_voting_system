name: CI/CD Pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

env:
  EC2_SSH_KEY: ${{ secrets.EC2_KEY }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrests.EC2_USER }}
  APP_KEY: ${{ secrets.APP_KEY }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}

jobs:
  Copy-docker-compose-to-EC2:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy docker-compose to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "docker-compose.yaml"
          target: "/home/${{ secrets.EC2_USER }}/"

  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run Laravel tests
        run: |
          docker build -t laravel-test ./server 
          docker run --rm \
            -e DB_CONNECTION=mysql \
            -e DB_DATABASE=secure_voting_system_testing \
            -e DB_USERNAME=root \
            -e DB_PASSWORD=1234 \
            -v $(pwd)/server:/app \
            laravel-test php artisan test  # Run Laravel tests inside container

      - name: Build and Push Laravel image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/final_project_laravel_image:latest ./server
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/final_project_laravel_image:latest

      - name: Build and Push React image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/final_project_react_image:latest ./client
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/final_project_react_image:latest

      - name: Upload React build to S3 (static hosting)
        run: |
          cd client
          npm ci  # Clean install dependencies
          npm run build  # Build static site in /dist
          aws s3 sync dist/ s3://fse-final-zeineddine --delete --region eu-west-3  # Sync build with S3 bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy to EC2 via SSH
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem  # Save SSH private key to a file
          chmod 600 private_key.pem

          scp -o StrictHostKeyChecking=no -i private_key.pem docker-compose.yml $EC2_USER@$EC2_HOST:/home/$EC2_USER/

          ssh -o StrictHostKeyChecking=no -i private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/final_project_laravel_image:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/final_project_react_image:latest
            docker-compose down  # Stop running containers
            docker-compose up -d  # Start containers in detached mode
          EOF
